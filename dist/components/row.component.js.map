{"version":3,"file":"row.component.js","sourceRoot":"","sources":["../Users/dess/Desktop/personal_musings/angular4-smart-table/src/components/row.component.ts"],"names":[],"mappings":";;AAAA,sCAEuB;AACvB,qDAA8C;AAC9C,+CAA8C;AAC9C,yCAAwC;;IAgDpC,sBAAwD;QAAA,cAAS,GAAT,SAAS;8BA5BtC,IAAI,mBAAY,EAAE;qBAkC9B,IAAI;KAN6D;IA1BhF,sBAAI,kCAAQ;aAAZ;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;SACzB;aAED,UAAa,QAAQ;YACjB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACtC;;;OALA;IASD,sBAAI,sCAAY;QAFhB,SAAS;;;QAET;YACI,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;gBAC3B,OAAO,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;aAC/D;iBAAM;gBACH,OAAO,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;aACzB;SACJ;;;OAAA;IAED,iCAAU,GAAV;QACI,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;YAC3B,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SACjE;QACD,OAAO,EAAE,CAAC;KACb;IAID,kCAAW,GAAX;QACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACzB;;gBAjDJ,gBAAS,SAAC;oBACP,QAAQ,EAAE,MAAM,CAAC,EAAE,GAAE,EAAE;oBACvB,QAAQ,EAAE,gBAAgB;oBAC1B,QAAQ,EAAE,2BAAY;oBACtB,MAAM,EAAE,CAAC,qBAAS,CAAC;iBACtB;;;;gBAVQ,2BAAS,uBAkDD,aAAM,SAAC,iBAAU,CAAC,cAAM,OAAA,2BAAS,EAAT,CAAS,CAAC;;;yBArC9C,YAAK;0BACL,YAAK;mCAQL,aAAM;;uBAzBX;;AAca,oCAAY","sourcesContent":["import {\n    Component, Input, Inject, forwardRef, Output, EventEmitter, OnDestroy\n} from '@angular/core';\nimport { DataTable } from './table.component';\nimport { ROW_TEMPLATE } from './row.template';\nimport { ROW_STYLE } from \"./row.style\";\n\n\n@Component({\n    moduleId: module.id +'',\n    selector: '[dataTableRow]',\n    template: ROW_TEMPLATE,\n    styles: [ROW_STYLE]\n})\nexport class DataTableRow implements OnDestroy {\n\n    @Input() item: any;\n    @Input() index: number;\n\n    expanded: boolean;\n\n    // row selection:\n\n    private _selected: boolean;\n\n    @Output() selectedChange = new EventEmitter();\n\n    get selected() {\n        return this._selected;\n    }\n\n    set selected(selected) {\n        this._selected = selected;\n        this.selectedChange.emit(selected);\n    }\n\n    // other:\n\n    get displayIndex() {\n        if (this.dataTable.pagination) {\n            return this.dataTable.displayParams.offset + this.index + 1;\n        } else {\n            return this.index + 1;\n        }\n    }\n\n    getTooltip() {\n        if (this.dataTable.rowTooltip) {\n            return this.dataTable.rowTooltip(this.item, this, this.index);\n        }\n        return '';\n    }\n\n    constructor(@Inject(forwardRef(() => DataTable)) public dataTable: DataTable) {}\n\n    ngOnDestroy() {\n        this.selected = false;\n    }\n\n    public _this = this; // FIXME is there no template keyword for this in angular 2?\n}\n"]}